$colors: (
    white            : $white,
    black            : $black,
    red              : $red,
    orange           : $orange,
    yellow           : $yellow,
    green            : $green,
    blue             : $blue,
    teal             : $teal,
    pink             : $pink,
    purple           : $purple,
    gray             : $gray,
    gray-light       : $gray-light,
    gray-lighter     : $gray-lighter,
    gray-lightest    : $gray-lightest,
    primary          : $brand-primary,
    success          : $brand-success,
    info             : $brand-info,
    warning          : $brand-warning,
    danger           : $brand-danger,
    inverse          : $brand-inverse,
);

$colorize: (
    bgc     : "background",
    txtc    : "color",
    bdc     : "border-color"
);


@function rgba-to-rgb($rgba, $base: #fff) {
    @return mix(rgb(red($rgba), green($rgba), blue($rgba)), $base, alpha($rgba) * 100%);
}


.color-grid {
    width               : 100%;
    display             : flex;
    flex-wrap           : wrap;
    flex-direction      : row;
    justify-content     : flex-start;
    background-color    : #F0F0F0;

    .color-grid-item {
        width              : 33%;
        min-height         : 50px;
        font-size          : 10px;
        padding            : 5px 10px;
        margin             : .5px;
        flex-grow          : 1;

        display            : flex;
        justify-content    : flex-start;
        align-items        : center;

        @media only screen and (max-width: 1024px) {
            width: 50%;
        }

        @media only screen and (max-width: 520px) {
            width: 100%;
        }
    }
}

$color-grid-idx: 1;
@each $key, $value in $colors {

    @if ($value == transparent) {
        $value: rgba(0, 0, 0, 0);
    }

    .color-grid-item:nth-child(#{$color-grid-idx}) {

        $clr: rgba-to-rgb($value);

        @if (lightness($clr) >= 60%) {
            color: $black;
        } @else {
            color: $white;
        }

        background: $value;

        &:before {
            width      : 65%;
            content    : "#{$key}";
        }
        &:after {
            width             : 35%;
            text-align        : right;
            content           : "#{$value}";
            text-transform    : uppercase;
        }

        &.clear-content {
            span {
                width: 50%;
                &:last-child {
                    text-align: right;
                }
            }

            &:after,
            &:before { display: none; }
        }
    }

    @each $sel, $prop in $colorize {
        .#{$sel}-#{$key} {
            #{$prop}: $value !important;
        }
    }

    $color-grid-idx: $color-grid-idx + 1;
}
